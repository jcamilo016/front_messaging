{"version":3,"sources":["components/TabPanel.jsx","static/images/user_male.svg","static/images/user_female.svg","components/CardDestinatario.jsx","utils/api.js","hooks/useActions.js","components/ListaDestinatarios.jsx","components/FormDestinatario.jsx","pages/Destinatarios.jsx","components/FormEmail.jsx","components/FormSMS.jsx","pages/Mensajeria.jsx","components/Menu.jsx","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","rest","role","hidden","id","aria-labelledby","Box","sx","p","Typography","CardDestinatario","nombre","cedula","telefono","email","genero","eliminar","Card","maxWidth","CardMedia","component","alt","image","MaleImage","FemaleImage","className","CardContent","gutterBottom","variant","color","CardActions","Button","startIcon","onClick","axios","create","baseURL","useActions","useState","destinatarios","setDestinatarios","listarUsuarios","API","get","then","res","data","useEffect","eliminarDestinatario","userId","delete","crearDestinatario","destinatario","post","enviarEmail","console","log","enviarSms","body","ListaDestinatarios","showAlert","setShowAlert","timeId","setTimeout","clearTimeout","useCallback","Alert","severity","AlertTitle","Grid","container","spacing","map","item","name","phone","genre","genres","label","FormDestinatario","onFormSubmit","React","setGenero","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","onChange","handleChange","InputProps","startAdornment","InputAdornment","position","select","event","target","setFieldValue","helperText","g","MenuItem","size","type","Destinatarios","alignment","setAlignment","values","a","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","FormEmail","onFormEmailSubmit","emailTo","setEmailTo","emailList","d","to","subject","text","multiline","rows","FormSMS","onFormSMSSubmit","smsTo","setSmsTo","phoneList","phoneTo","message","Mensajeria","sendOption","setSendOption","newOption","Menu","theme","useTheme","setValue","a11yProps","bgcolor","width","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","axis","direction","onChangeIndex","dir","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc434e0e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...rest } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...rest}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabPanel;","export default __webpack_public_path__ + \"static/media/user_male.170c800c.svg\";","export default __webpack_public_path__ + \"static/media/user_female.ead7f208.svg\";","import React from \"react\";\r\nimport { Card, CardMedia, CardContent, Typography, CardActions, Button } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\"\r\nimport MaleImage from \"../static/images/user_male.svg\";\r\nimport FemaleImage from \"../static/images/user_female.svg\";\r\n\r\nfunction CardDestinatario({nombre, cedula, telefono, email, genero, eliminar}) {\r\n    return (\r\n        <Card sx={{ maxWidth: 345 }}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                alt=\"user image\"\r\n                image={genero === \"HOMBRE\" ? MaleImage: FemaleImage}\r\n                className=\"media\"\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {nombre}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {`Cédula: ${cedula}`}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {`Celular: ${telefono}`}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {`Email: ${email}`}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant=\"outlined\" startIcon={<DeleteIcon />} onClick={() => eliminar(cedula)}>\r\n                    Eliminar\r\n                </Button>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardDestinatario;","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: `http://ec2-35-175-138-59.compute-1.amazonaws.com:8090/`,\r\n});","import {useEffect, useState} from \"react\";\r\nimport API from \"../utils/api\";\r\n\r\nfunction useActions() {\r\n    const [destinatarios, setDestinatarios] = useState([]);\r\n\r\n    const listarUsuarios = () => {\r\n        API.get(\"/destinatario\")\r\n            .then(res => setDestinatarios(res.data))\r\n    }\r\n\r\n    useEffect(() => {\r\n        listarUsuarios();\r\n    }, []);\r\n\r\n    const eliminarDestinatario = (userId) => {\r\n        API.delete(`/destinatario/${userId}`)\r\n            .then(() => listarUsuarios())\r\n    }\r\n\r\n    const crearDestinatario = (destinatario) => {\r\n        API.post(\"/destinatario/crear\", {...destinatario})\r\n            .then((res) => listarUsuarios())\r\n    }\r\n\r\n    const enviarEmail = (email) => {\r\n        API.post(\"/mensajeria/enviarMail\", {...email})\r\n            .then((res) => console.log(res))\r\n    }\r\n\r\n    const enviarSms = (body) => {\r\n        API.post(\"/mensajeria/enviarSms\", {...body})\r\n            .then((res) => console.log(res))\r\n    }\r\n\r\n    return {\r\n        destinatarios,\r\n        eliminarDestinatario,\r\n        listarUsuarios,\r\n        crearDestinatario,\r\n        enviarEmail,\r\n        enviarSms,\r\n    }\r\n}\r\n\r\nexport default useActions;","import React, {useCallback, useState, useEffect} from \"react\";\r\nimport CardDestinatario from \"./CardDestinatario\";\r\nimport { Grid, AlertTitle, Alert} from \"@mui/material\";\r\nimport useActions from \"../hooks/useActions\";\r\n\r\nfunction ListaDestinatarios() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const {destinatarios, eliminarDestinatario} = useActions();\r\n\r\n    useEffect(() => {\r\n\r\n        const timeId = setTimeout(() => {\r\n            if(showAlert === true) {\r\n                setShowAlert(false)\r\n            }\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        }\r\n    }, [showAlert]);\r\n\r\n    const eliminar = useCallback((cedula) => {\r\n        eliminarDestinatario(cedula);\r\n        setShowAlert(true);\r\n    }, [eliminarDestinatario]);\r\n\r\n\r\n    return (\r\n        <>\r\n            {showAlert && (\r\n                <Alert severity=\"success\" className=\"alert-container\">\r\n                    <AlertTitle>Exito!</AlertTitle>\r\n                    Se ha eliminado el destinatario\r\n                </Alert>\r\n            )}\r\n            <Grid container spacing={4}>\r\n                {\r\n                    destinatarios && destinatarios.map(destinatario => (\r\n                        <Grid item key={destinatario.userId}>\r\n                            <CardDestinatario\r\n                                nombre={destinatario.name}\r\n                                cedula={destinatario.userId}\r\n                                telefono={destinatario.phone}\r\n                                email={destinatario.email}\r\n                                genero={destinatario.genre}\r\n                                eliminar={eliminar}\r\n                            />\r\n                        </Grid>\r\n                    ))\r\n                }\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ListaDestinatarios;","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport { TextField, InputAdornment, MenuItem, Button } from '@mui/material';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport VpnKeyIcon from '@mui/icons-material/VpnKey';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\r\nimport WcIcon from '@mui/icons-material/Wc';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nconst genres = [\r\n    {\r\n        value: 'HOMBRE',\r\n        label: 'Hombre',\r\n    },\r\n    {\r\n        value: 'MUJER',\r\n        label: 'Mujer',\r\n    }\r\n];\r\n\r\nfunction FormDestinatario({ onFormSubmit }){\r\n    const [genero, setGenero] = React.useState('HOMBRE');\r\n\r\n    const handleGenreChange = (event) => {\r\n        setGenero(event.target.value);\r\n        formik.setFieldValue(\"genre\", event.target.value);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            userId: \"\",\r\n            phone: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            genre: \"HOMBRE\",\r\n        },\r\n        onSubmit: onFormSubmit,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className=\"destinatario-form-container\">\r\n                <TextField\r\n                    id=\"userId\"\r\n                    label=\"Cédula\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <VpnKeyIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"name\"\r\n                    label=\"Nombre del destinario\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AccountCircle />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"phone\"\r\n                    label=\"Teléfono\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <PhoneIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AlternateEmailIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"genre\"\r\n                    select\r\n                    value={genero}\r\n                    label=\"Género\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <WcIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handleGenreChange}\r\n                    helperText=\"Por favor seleccione su género\"\r\n                >\r\n                    {genres.map(g => (\r\n                        <MenuItem key={g.value} value={g.value}>\r\n                            {g.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <Button variant=\"contained\" size=\"large\" className=\"create-button\" type=\"submit\">\r\n                    <AddCircleIcon/><span className=\"button-span\">Crear Destinatario</span>\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormDestinatario;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Alert, AlertTitle, ToggleButton, ToggleButtonGroup} from '@mui/material';\r\nimport ViewListIcon from '@mui/icons-material/ViewList';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport ListaDestinatarios from \"../components/ListaDestinatarios\";\r\nimport FormDestinatario from \"../components/FormDestinatario\";\r\nimport useActions from \"../hooks/useActions\";\r\n\r\n\r\nfunction Destinatarios() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alignment, setAlignment] = React.useState(\"lista\");\r\n\r\n    const {crearDestinatario} = useActions();\r\n\r\n    useEffect(() => {\r\n\r\n        const timeId = setTimeout(() => {\r\n            if(showAlert === true) {\r\n                setShowAlert(false)\r\n            }\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        }\r\n    }, [showAlert]);\r\n\r\n\r\n    const onFormSubmit = useCallback(async (values) => {\r\n        await crearDestinatario(values);\r\n        setShowAlert(true);\r\n        setAlignment(\"lista\");\r\n    }, [crearDestinatario]);\r\n\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toggle-buttons-container\">\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"lista\">\r\n                        <ViewListIcon/><span className=\"button-span\">{\"Lista de destinatarios\"}</span>\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"crear\">\r\n                        <AccountCircleIcon/><span className=\"button-span\">{\"Crear destinatario\"}</span>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </div>\r\n            {showAlert && (\r\n                <Alert severity=\"success\" className=\"alert-container\">\r\n                    <AlertTitle>Exito!</AlertTitle>\r\n                    Se ha creado el destinatario\r\n                </Alert>\r\n            )}\r\n            {alignment === \"lista\" && (<ListaDestinatarios/>)}\r\n            {alignment === \"crear\" && (<FormDestinatario onFormSubmit={onFormSubmit}/>)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Destinatarios","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport {Button, InputAdornment, MenuItem, TextField} from \"@mui/material\";\r\nimport AlternateEmailIcon from \"@mui/icons-material/AlternateEmail\";\r\nimport SubjectIcon from '@mui/icons-material/Subject';\r\nimport SendIcon from '@mui/icons-material/Send';\r\n\r\nfunction FormEmail({ onFormEmailSubmit, destinatarios }){\r\n    const [emailTo, setEmailTo] = React.useState(\"\");\r\n    const emailList = destinatarios.map( d => ({ value: d.email, label: d.email}));\r\n\r\n    const handleEmailToChange = (event) => {\r\n        setEmailTo(event.target.value);\r\n        formik.setFieldValue(\"to\", event.target.value);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: \"\",\r\n            subject: \"\",\r\n            text: \"\",\r\n        },\r\n        onSubmit: onFormEmailSubmit,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className=\"mensajeria-form-container\">\r\n                <TextField\r\n                    id=\"to\"\r\n                    select\r\n                    value={emailTo}\r\n                    label=\"Hacia\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AlternateEmailIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handleEmailToChange}\r\n                    helperText=\"Cuenta de correo a la que quiere enviar el mensaje\"\r\n                >\r\n                    {emailList.map(g => (\r\n                        <MenuItem key={g.value} value={g.value}>\r\n                            {g.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"subject\"\r\n                    label=\"Asunto\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <SubjectIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"text\"\r\n                    label=\"Mensaje\"\r\n                    multiline\r\n                    rows={6}\r\n                    onChange={formik.handleChange}\r\n                    helperText=\"Cuerpo del mensaje a enviar\"\r\n                />\r\n                <Button variant=\"contained\" size=\"large\" className=\"create-button\" type=\"submit\">\r\n                    <SendIcon/><span className=\"button-span\">Enviar Email</span>\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormEmail;","import React, {useState} from \"react\";\r\nimport {useFormik} from 'formik';\r\nimport {Button, InputAdornment, MenuItem, TextField} from \"@mui/material\";\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\n\r\nfunction FormSMS({destinatarios, onFormSMSSubmit }) {\r\n    const [smsTo, setSmsTo] = useState(\"\");\r\n    const phoneList = destinatarios.map(d => ({value: d.phone, label: d.phone}));\r\n\r\n    const handlePhoneToChange = (event) => {\r\n        setSmsTo(event.target.value);\r\n        formik.setFieldValue(\"phoneTo\", event.target.value);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phoneTo: \"\",\r\n            message: \"\",\r\n        },\r\n        onSubmit: onFormSMSSubmit,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className=\"mensajeria-form-container\">\r\n                <TextField\r\n                    id=\"phoneTo\"\r\n                    select\r\n                    value={smsTo}\r\n                    label=\"Teléfono\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <PermPhoneMsgIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handlePhoneToChange}\r\n                    helperText=\"Teléfono al que desea enviar el sms\"\r\n                >\r\n                    {phoneList.map(g => (\r\n                        <MenuItem key={g.value} value={g.value}>\r\n                            {g.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"message\"\r\n                    label=\"Mensaje\"\r\n                    multiline\r\n                    rows={3}\r\n                    onChange={formik.handleChange}\r\n                    helperText=\"Texto del mensaje a enviar\"\r\n                />\r\n                <Button variant=\"contained\" size=\"large\" className=\"create-button\" type=\"submit\">\r\n                    <SendIcon/><span className=\"button-span\">Enviar Sms</span>\r\n                </Button>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FormSMS;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Alert, AlertTitle, ToggleButton, ToggleButtonGroup} from \"@mui/material\";\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport SmsIcon from '@mui/icons-material/Sms';\r\nimport useActions from \"../hooks/useActions\";\r\nimport FormEmail from \"../components/FormEmail\";\r\nimport FormSMS from \"../components/FormSMS\";\r\n\r\nfunction Mensajeria() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [sendOption, setSendOption] = React.useState(\"email\");\r\n    const { destinatarios, enviarEmail, enviarSms } = useActions();\r\n\r\n    useEffect(() => {\r\n\r\n        const timeId = setTimeout(() => {\r\n            if(showAlert === true) {\r\n                setShowAlert(false)\r\n            }\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        }\r\n    }, [showAlert]);\r\n\r\n    const handleChange = (event, newOption) => {\r\n        setSendOption(newOption);\r\n    }\r\n\r\n    const onFormEmailSubmit = useCallback(async (values) => {\r\n        await enviarEmail(values);\r\n        setShowAlert(true);\r\n    }, [enviarEmail]);\r\n\r\n    const onFormSMSSubmit = useCallback(async (values) => {\r\n        await enviarSms(values);\r\n        setShowAlert(true);\r\n    }, [enviarSms]);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toggle-buttons-container\">\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={sendOption}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"email\">\r\n                        <EmailIcon/><span className=\"button-span\">{\"Enviar E-Mail\"}</span>\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"sms\">\r\n                        <SmsIcon/><span className=\"button-span\">{\"Enviar SMS\"}</span>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </div>\r\n            {showAlert && (\r\n                <Alert severity=\"success\" className=\"alert-container\">\r\n                    <AlertTitle>Exito!</AlertTitle>\r\n                    Se ha enviado el mensaje\r\n                </Alert>\r\n            )}\r\n            {sendOption === \"email\" && (<FormEmail destinatarios={destinatarios} onFormEmailSubmit={onFormEmailSubmit}/>)}\r\n            {sendOption === \"sms\" && (<FormSMS destinatarios={destinatarios} onFormSMSSubmit={onFormSMSSubmit}/>)}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mensajeria;","import React, { useState, useCallback } from \"react\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme, Box, AppBar, Tabs, Tab, Container } from \"@mui/material\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport Destinatarios from \"../pages/Destinatarios\";\r\nimport Mensajeria from \"../pages/Mensajeria\";\r\n\r\nfunction Menu() {\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const a11yProps = useCallback((index) => (\r\n        {\r\n            id: `full-width-tab-${index}`,\r\n            'aria-controls': `full-width-tabpanel-${index}`,\r\n        }\r\n    ), []);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ bgcolor: 'background.paper', width: 'auto' }}>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"inherit\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Mensajería\" {...a11yProps(0)} />\r\n                    <Tab label=\"Destinatarios\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <Container maxWidth=\"80%\">\r\n                        <Mensajeria />\r\n                    </Container>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <Container maxWidth=\"80%\">\r\n                        <Destinatarios/>\r\n                    </Container>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Menu;","import './App.scss';\nimport Menu from \"./components/Menu\"\n\nfunction App() {\n  return (\n    <div>\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}