{"version":3,"sources":["components/TabPanel.jsx","static/images/user_male.svg","static/images/user_female.svg","utils/api.js","components/CardDestinatario.jsx","components/ListaDestinatarios.jsx","components/FormDestinatario.jsx","pages/Destinatarios.jsx","components/FormEmail.jsx","components/FormSMS.jsx","pages/Mensajeria.jsx","components/Menu.jsx","App.js","reportWebVitals.js","index.js"],"names":["TabPanel","props","children","value","index","rest","role","hidden","id","aria-labelledby","Box","sx","p","Typography","axios","create","baseURL","CardDestinatario","nombre","cedula","telefono","email","genero","setShowAlert","refetch","useLazyAxios","axiosInstance","url","method","deleteData","loading","Card","maxWidth","elevation","CardMedia","component","alt","image","MaleImage","FemaleImage","className","CardContent","gutterBottom","variant","color","CardActions","LoadingButton","startIcon","onClick","then","res","loadingPosition","ListaDestinatarios","useState","showAlert","useAxios","data","error","useEffect","timeId","setTimeout","clearTimeout","console","log","Alert","severity","AlertTitle","Grid","container","spacing","map","destinatario","item","name","userId","phone","genre","justifyContent","marginTop","Skeleton","width","height","genres","label","FormDestinatario","onFormSubmit","isLoading","React","setGenero","formik","useFormik","initialValues","onSubmit","handleSubmit","TextField","onChange","handleChange","InputProps","startAdornment","InputAdornment","position","select","event","target","setFieldValue","helperText","g","MenuItem","size","type","Destinatarios","alignment","setAlignment","saveData","useCallback","values","ToggleButtonGroup","exclusive","newAlignment","ToggleButton","FormEmail","destinatarios","emailTo","setEmailTo","emailList","d","to","subject","text","multiline","rows","FormSMS","smsTo","setSmsTo","phoneList","phoneTo","message","Mensajeria","sendOption","setSendOption","newOption","direction","alignItems","Menu","theme","useTheme","setValue","a11yProps","bgcolor","AppBar","Tabs","newValue","indicatorColor","textColor","aria-label","Tab","axis","onChangeIndex","dir","Container","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9db3df5c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Box, Typography } from \"@mui/material\";\r\n\r\nfunction TabPanel(props) {\r\n    const { children, value, index, ...rest } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`full-width-tabpanel-${index}`}\r\n            aria-labelledby={`full-width-tab-${index}`}\r\n            {...rest}\r\n        >\r\n            {value === index && (\r\n                <Box sx={{ p: 3 }}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TabPanel;","export default __webpack_public_path__ + \"static/media/user_male.170c800c.svg\";","export default __webpack_public_path__ + \"static/media/user_female.ead7f208.svg\";","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n    baseURL: `http://localhost:8080/`,\r\n});","import React from \"react\";\r\nimport { Card, CardMedia, CardContent, Typography, CardActions } from \"@mui/material\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport DeleteIcon from \"@mui/icons-material/Delete\"\r\nimport MaleImage from \"../static/images/user_male.svg\";\r\nimport FemaleImage from \"../static/images/user_female.svg\";\r\nimport { useLazyAxios } from \"use-axios-client\";\r\nimport axiosInstance from \"../utils/api\";\r\n\r\nfunction CardDestinatario({nombre, cedula, telefono, email, genero, setShowAlert, refetch}) {\r\n    const [deleteData, { loading }] = useLazyAxios({\r\n            axiosInstance,\r\n            url: `destinatario/${cedula}`,\r\n            method: 'DELETE'\r\n        });\r\n\r\n    const onDeleteHandler = () => {\r\n        deleteData()\r\n            .then(res => {\r\n                setShowAlert(true);\r\n                refetch();\r\n            })\r\n    }\r\n\r\n    return (\r\n        <Card sx={{ maxWidth: 345 }} elevation={3}>\r\n            <CardMedia\r\n                component=\"img\"\r\n                alt=\"user image\"\r\n                image={genero === \"HOMBRE\" ? MaleImage: FemaleImage}\r\n                className=\"media\"\r\n            />\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {nombre}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    {`Cédula: ${cedula}`}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {`Celular: ${telefono}`}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        {`Email: ${email}`}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <LoadingButton\r\n                    variant=\"outlined\"\r\n                    startIcon={<DeleteIcon />}\r\n                    onClick={() => onDeleteHandler()}\r\n                    loadingPosition=\"start\"\r\n                    loading={loading} >\r\n                        Eliminar\r\n                </LoadingButton>\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CardDestinatario;","import React, {useState, useEffect} from \"react\";\r\nimport CardDestinatario from \"./CardDestinatario\";\r\nimport {Grid, AlertTitle, Alert, Skeleton} from \"@mui/material\";\r\nimport {useAxios} from \"use-axios-client\";\r\nimport axiosInstance from \"../utils/api\";\r\n\r\nfunction ListaDestinatarios() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const { data, loading, error, refetch } = useAxios({\r\n        axiosInstance,\r\n        url: '/destinatario'\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const timeId = setTimeout(() => {\r\n            if (showAlert === true) {\r\n                setShowAlert(false)\r\n            }\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        }\r\n    }, [showAlert]);\r\n\r\n    console.log(data);\r\n\r\n    return (\r\n        <>\r\n            {showAlert && (\r\n                <Alert severity=\"success\" className=\"alert-container\">\r\n                    <AlertTitle>Exito!</AlertTitle>\r\n                    Se ha eliminado el destinatario\r\n                </Alert>\r\n            )}\r\n            <Grid container spacing={4}>\r\n                {data && data.map(destinatario => (\r\n                    <Grid item key={destinatario.userId}>\r\n                        <CardDestinatario\r\n                            nombre={destinatario.name}\r\n                            cedula={destinatario.userId}\r\n                            telefono={destinatario.phone}\r\n                            email={destinatario.email}\r\n                            genero={destinatario.genre}\r\n                            setShowAlert={setShowAlert}\r\n                            refetch={refetch}\r\n                        />\r\n                    </Grid>\r\n                ))}\r\n                {loading && (\r\n                    <Grid container spacing={2} justifyContent=\"center\" sx={{marginTop: \"25px\"}}>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Skeleton variant=\"rectangular\" width={300} height={300}/>\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n                {error && (\r\n                    <Grid container justifyContent=\"center\" sx={{marginTop: \"25px\"}}>\r\n                        <Grid item>\r\n                            Error :(\r\n                        </Grid>\r\n                    </Grid>\r\n                )}\r\n            </Grid>\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default ListaDestinatarios;","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport { TextField, InputAdornment, MenuItem } from '@mui/material';\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport AccountCircle from '@mui/icons-material/AccountCircle';\r\nimport VpnKeyIcon from '@mui/icons-material/VpnKey';\r\nimport PhoneIcon from '@mui/icons-material/Phone';\r\nimport AlternateEmailIcon from '@mui/icons-material/AlternateEmail';\r\nimport WcIcon from '@mui/icons-material/Wc';\r\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\r\n\r\nconst genres = [\r\n    {\r\n        value: 'HOMBRE',\r\n        label: 'Hombre',\r\n    },\r\n    {\r\n        value: 'MUJER',\r\n        label: 'Mujer',\r\n    }\r\n];\r\n\r\nfunction FormDestinatario({ onFormSubmit, isLoading }){\r\n    const [genero, setGenero] = React.useState('HOMBRE');\r\n\r\n    const handleGenreChange = (event) => {\r\n        setGenero(event.target.value);\r\n        formik.setFieldValue(\"genre\", event.target.value);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            userId: \"\",\r\n            phone: \"\",\r\n            name: \"\",\r\n            email: \"\",\r\n            genre: \"HOMBRE\",\r\n        },\r\n        onSubmit: onFormSubmit,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className=\"destinatario-form-container\">\r\n                <TextField\r\n                    id=\"userId\"\r\n                    label=\"Cédula\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <VpnKeyIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"name\"\r\n                    label=\"Nombre del destinario\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AccountCircle />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"phone\"\r\n                    label=\"Teléfono\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <PhoneIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"email\"\r\n                    label=\"E-mail\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AlternateEmailIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"genre\"\r\n                    select\r\n                    value={genero}\r\n                    label=\"Género\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <WcIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handleGenreChange}\r\n                    helperText=\"Por favor seleccione su género\"\r\n                >\r\n                    {genres.map(g => (\r\n                        <MenuItem key={g.value} value={g.value}>\r\n                            {g.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <LoadingButton\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className=\"create-button\"\r\n                    type=\"submit\"\r\n                    startIcon={<AddCircleIcon/>}\r\n                    loadingPosition=\"start\"\r\n                    loading={isLoading}\r\n                >\r\n                        Crear Destinatario\r\n                </LoadingButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormDestinatario;","import React, {useCallback, useEffect, useState} from \"react\";\r\nimport {Alert, AlertTitle, ToggleButton, ToggleButtonGroup} from '@mui/material';\r\nimport ViewListIcon from '@mui/icons-material/ViewList';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport ListaDestinatarios from \"../components/ListaDestinatarios\";\r\nimport FormDestinatario from \"../components/FormDestinatario\";\r\nimport { useLazyAxios } from \"use-axios-client\";\r\nimport axiosInstance from \"../utils/api\";\r\n\r\nfunction Destinatarios() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [alignment, setAlignment] = React.useState(\"lista\");\r\n\r\n    const [saveData, { loading }] = useLazyAxios({\r\n        axiosInstance,\r\n        url: `destinatario/crear`,\r\n        method: \"POST\"\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const timeId = setTimeout(() => {\r\n            if(showAlert === true) {\r\n                setShowAlert(false)\r\n            }\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        }\r\n    }, [showAlert]);\r\n\r\n\r\n    const onFormSubmit = useCallback( (values) => {\r\n        saveData(values)\r\n            .then(res => {\r\n                setAlignment(\"lista\");\r\n                setShowAlert(true);\r\n            });\r\n    }, [saveData]);\r\n\r\n\r\n    const handleChange = (event, newAlignment) => {\r\n        setAlignment(newAlignment);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toggle-buttons-container\">\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={alignment}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"lista\">\r\n                        <ViewListIcon/><span className=\"button-span\">{\"Lista de destinatarios\"}</span>\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"crear\">\r\n                        <AccountCircleIcon/><span className=\"button-span\">{\"Crear destinatario\"}</span>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </div>\r\n            {showAlert && (\r\n                <Alert severity=\"success\" className=\"alert-container\">\r\n                    <AlertTitle>Exito!</AlertTitle>\r\n                    Se ha creado el destinatario\r\n                </Alert>\r\n            )}\r\n            {alignment === \"lista\" && (<ListaDestinatarios/>)}\r\n            {alignment === \"crear\" && (<FormDestinatario onFormSubmit={onFormSubmit} isLoading={loading}/>)}\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Destinatarios","import React from \"react\";\r\nimport { useFormik } from 'formik';\r\nimport {InputAdornment, MenuItem, TextField} from \"@mui/material\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport AlternateEmailIcon from \"@mui/icons-material/AlternateEmail\";\r\nimport SubjectIcon from '@mui/icons-material/Subject';\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useLazyAxios } from \"use-axios-client\";\r\nimport axiosInstance from \"../utils/api\";\r\n\r\nfunction FormEmail({ destinatarios, setShowAlert }){\r\n    const [emailTo, setEmailTo] = React.useState(\"\");\r\n    const emailList = destinatarios.map( d => ({ value: d.email, label: `${d.email} - ${d.name}`}));\r\n\r\n    const [saveData, { loading }] = useLazyAxios({\r\n        axiosInstance,\r\n        url: \"mensajeria/enviarMail\",\r\n        method: \"POST\"\r\n    });\r\n\r\n    const onFormEmailSubmit = (values) => {\r\n        saveData(values)\r\n            .then(res => {\r\n                setShowAlert(true);\r\n            })\r\n    }\r\n\r\n    const handleEmailToChange = (event) => {\r\n        setEmailTo(event.target.value);\r\n        formik.setFieldValue(\"to\", event.target.value);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            to: \"\",\r\n            subject: \"\",\r\n            text: \"\",\r\n        },\r\n        onSubmit: onFormEmailSubmit,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className=\"mensajeria-form-container\">\r\n                <TextField\r\n                    id=\"to\"\r\n                    select\r\n                    value={emailTo}\r\n                    label=\"Hacia\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <AlternateEmailIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handleEmailToChange}\r\n                    helperText=\"Cuenta de correo a la que quiere enviar el mensaje\"\r\n                >\r\n                    {emailList.map(g => (\r\n                        <MenuItem key={g.value} value={g.value}>\r\n                            {g.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"subject\"\r\n                    label=\"Asunto\"\r\n                    onChange={formik.handleChange}\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <SubjectIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"text\"\r\n                    label=\"Mensaje\"\r\n                    multiline\r\n                    rows={6}\r\n                    onChange={formik.handleChange}\r\n                    helperText=\"Cuerpo del mensaje a enviar\"\r\n                />\r\n                <LoadingButton\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className=\"create-button\"\r\n                    type=\"submit\"\r\n                    startIcon={<SendIcon/>}\r\n                    loadingPosition=\"start\"\r\n                    loading={loading} >\r\n                        Enviar Email\r\n                </LoadingButton>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default FormEmail;","import React, {useState} from \"react\";\r\nimport {useFormik} from 'formik';\r\nimport {InputAdornment, MenuItem, TextField} from \"@mui/material\";\r\nimport LoadingButton from '@mui/lab/LoadingButton';\r\nimport PermPhoneMsgIcon from '@mui/icons-material/PermPhoneMsg';\r\nimport SendIcon from \"@mui/icons-material/Send\";\r\nimport { useLazyAxios } from \"use-axios-client\";\r\nimport axiosInstance from \"../utils/api\";\r\n\r\nfunction FormSMS({destinatarios, setShowAlert }) {\r\n    const [smsTo, setSmsTo] = useState(\"\");\r\n    const phoneList = destinatarios.map(d => ({value: d.phone, label: `${d.phone} - ${d.name}`}));\r\n\r\n    const [saveData, { loading }] = useLazyAxios({\r\n        axiosInstance,\r\n        url: \"mensajeria/enviarSms\",\r\n        method: \"POST\"\r\n    });\r\n\r\n    const onFormSMSSubmit = (values) => {\r\n        saveData(values)\r\n            .then(res => {\r\n                setShowAlert(true);\r\n            })\r\n    }\r\n\r\n    const handlePhoneToChange = (event) => {\r\n        setSmsTo(event.target.value);\r\n        formik.setFieldValue(\"phoneTo\", event.target.value);\r\n    };\r\n\r\n    const formik = useFormik({\r\n        initialValues: {\r\n            phoneTo: \"\",\r\n            message: \"\",\r\n        },\r\n        onSubmit: onFormSMSSubmit,\r\n    });\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={formik.handleSubmit} className=\"mensajeria-form-container\">\r\n                <TextField\r\n                    id=\"phoneTo\"\r\n                    select\r\n                    value={smsTo}\r\n                    label=\"Teléfono\"\r\n                    InputProps={{\r\n                        startAdornment: (\r\n                            <InputAdornment position=\"start\">\r\n                                <PermPhoneMsgIcon />\r\n                            </InputAdornment>\r\n                        ),\r\n                    }}\r\n                    onChange={handlePhoneToChange}\r\n                    helperText=\"Teléfono al que desea enviar el sms\"\r\n                >\r\n                    {phoneList.map(g => (\r\n                        <MenuItem key={g.value} value={g.value}>\r\n                            {g.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField\r\n                    id=\"message\"\r\n                    label=\"Mensaje\"\r\n                    multiline\r\n                    rows={3}\r\n                    onChange={formik.handleChange}\r\n                    helperText=\"Texto del mensaje a enviar\"\r\n                />\r\n                <LoadingButton\r\n                    variant=\"contained\"\r\n                    size=\"large\"\r\n                    className=\"create-button\"\r\n                    type=\"submit\"\r\n                    startIcon={<SendIcon/>}\r\n                    loadingPosition=\"start\"\r\n                    loading={loading} >\r\n                        Enviar Sms\r\n                </LoadingButton>\r\n            </form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default FormSMS;","import {useEffect, useState} from \"react\";\r\nimport {Alert, AlertTitle, ToggleButton, ToggleButtonGroup, Skeleton, Grid} from \"@mui/material\";\r\nimport EmailIcon from '@mui/icons-material/Email';\r\nimport SmsIcon from '@mui/icons-material/Sms';\r\nimport FormEmail from \"../components/FormEmail\";\r\nimport FormSMS from \"../components/FormSMS\";\r\nimport {useAxios} from \"use-axios-client\";\r\nimport axiosInstance from \"../utils/api\";\r\n\r\nfunction Mensajeria() {\r\n    const [showAlert, setShowAlert] = useState(false);\r\n    const [sendOption, setSendOption] = useState(\"email\");\r\n\r\n    const { data: destinatarios, loading } = useAxios({\r\n        axiosInstance,\r\n        url: '/destinatario'\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        const timeId = setTimeout(() => {\r\n            if(showAlert === true) {\r\n                setShowAlert(false)\r\n            }\r\n        }, 3000)\r\n\r\n        return () => {\r\n            clearTimeout(timeId)\r\n        }\r\n    }, [showAlert]);\r\n\r\n    const handleChange = (event, newOption) => {\r\n        setSendOption(newOption);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"toggle-buttons-container\">\r\n                <ToggleButtonGroup\r\n                    color=\"primary\"\r\n                    value={sendOption}\r\n                    exclusive\r\n                    onChange={handleChange}\r\n                >\r\n                    <ToggleButton value=\"email\">\r\n                        <EmailIcon/><span className=\"button-span\">{\"Enviar E-Mail\"}</span>\r\n                    </ToggleButton>\r\n                    <ToggleButton value=\"sms\">\r\n                        <SmsIcon/><span className=\"button-span\">{\"Enviar SMS\"}</span>\r\n                    </ToggleButton>\r\n                </ToggleButtonGroup>\r\n            </div>\r\n            {showAlert && (\r\n                <Alert severity=\"success\" className=\"alert-container\">\r\n                    <AlertTitle>Exito!</AlertTitle>\r\n                    Se ha enviado el mensaje\r\n                </Alert>\r\n            )}\r\n            {destinatarios && sendOption === \"email\" && (<FormEmail destinatarios={destinatarios} setShowAlert={setShowAlert}/>)}\r\n            {destinatarios && sendOption === \"sms\" && (<FormSMS destinatarios={destinatarios} setShowAlert={setShowAlert}/>)}\r\n            {loading && (\r\n                <Grid container spacing={4} justifyContent=\"center\" sx={{marginTop: \"25px\"}} direction=\"column\" alignItems=\"center\">\r\n                    <Grid item>\r\n                        <Skeleton variant=\"rectangular\" width={536} height={40} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Skeleton variant=\"rectangular\" width={536} height={40} />\r\n                    </Grid>\r\n                    <Grid item>\r\n                        <Skeleton variant=\"rectangular\" width={536} height={138} />\r\n                    </Grid>\r\n                </Grid>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Mensajeria;","import React, { useState, useCallback } from \"react\";\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport { useTheme, Box, AppBar, Tabs, Tab, Container } from \"@mui/material\";\r\nimport TabPanel from \"./TabPanel\";\r\nimport Destinatarios from \"../pages/Destinatarios\";\r\nimport Mensajeria from \"../pages/Mensajeria\";\r\n\r\nfunction Menu() {\r\n    const theme = useTheme();\r\n    const [value, setValue] = useState(0);\r\n\r\n    const a11yProps = useCallback((index) => (\r\n        {\r\n            id: `full-width-tab-${index}`,\r\n            'aria-controls': `full-width-tabpanel-${index}`,\r\n        }\r\n    ), []);\r\n\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n    };\r\n\r\n    const handleChangeIndex = (index) => {\r\n        setValue(index);\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ bgcolor: 'background.paper', width: 'auto' }}>\r\n            <AppBar position=\"static\">\r\n                <Tabs\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    indicatorColor=\"secondary\"\r\n                    textColor=\"inherit\"\r\n                    variant=\"fullWidth\"\r\n                    aria-label=\"full width tabs example\"\r\n                >\r\n                    <Tab label=\"Mensajería\" {...a11yProps(0)} />\r\n                    <Tab label=\"Destinatarios\" {...a11yProps(1)} />\r\n                </Tabs>\r\n            </AppBar>\r\n            <SwipeableViews\r\n                axis={theme.direction === 'rtl' ? 'x-reverse' : 'x'}\r\n                index={value}\r\n                onChangeIndex={handleChangeIndex}\r\n            >\r\n                <TabPanel value={value} index={0} dir={theme.direction}>\r\n                    <Container maxWidth=\"80%\">\r\n                        <Mensajeria />\r\n                    </Container>\r\n                </TabPanel>\r\n                <TabPanel value={value} index={1} dir={theme.direction}>\r\n                    <Container maxWidth=\"80%\">\r\n                        <Destinatarios/>\r\n                    </Container>\r\n                </TabPanel>\r\n            </SwipeableViews>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Menu;","import './App.scss';\nimport Menu from \"./components/Menu\";\n\nfunction App() {\n  return (\n    <div>\n      <Menu />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}